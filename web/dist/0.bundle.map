{"version":3,"sources":["webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.module.ts","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.ts","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.ts","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas/ideas-routing.ts","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.css","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.css","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.html","webpack:////var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.html","webpack:////var/www/html/bucketlist/bucketlist/~/rxjs/add/operator/switchMap.js","webpack:////var/www/html/bucketlist/bucketlist/~/rxjs/operator/switchMap.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAA8C;AACE;AACD;AAEM;AAC+B;AAEtC;AAC9C,gDAAgD;AAgBhD;IAAA;IAA0B,CAAC;IAd3B;QAAC,sFAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,mEAAW;gBACX,oEAAY;aACb;YACD,YAAY,EAAE;gBACZ,wEAAc;gBACd,wGAAsB;aACvB;YACD,SAAS,EAAE,EAEV;SACF,CAAC;;mBAAA;IACwB,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACxBsB;AACe;AAC5B;AAOpC;IAEE,gCACY,KAAqB,EACrB,MAAc;QADd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACvB,CAAC;IAEJ,yCAAQ,GAAR;QACE,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEvD,2BAA2B;QAC3B,+CAA+C;IACjD,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IArBH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,kCAA8C;YAC9C,kCAA6C;SAC9C,CAAC;;8BAAA;IAmBF,6BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC3BgD;AAOjD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAVH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAAqC;YACrC,kCAAoC;SACrC,CAAC;;sBAAA;IAQF,qBAAC;AAAD,CAAC;;;;;;;;;;;;;ACbqD;AAED;AAC+B;AAEpF,IAAM,WAAW,GAAW;IAC1B,EAAE,IAAI,EAAE,EAAE,EAAG,SAAS,EAAE,wEAAc,EAAE;IACxC,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,wGAAsB,EAAE;CAC/D,CAAC;AAEK,IAAM,YAAY,GAAwB,qEAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;;;;;;;ACXpF,mB;;;;;;;ACAA,mB;;;;;;;ACAA,uD;;;;;;;ACAA,oO;;;;;;;;ACAA;AACA;AACA;AACA;AACA,qC;;;;;;;;ACJA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,+CAA+C;AAC1D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qC","file":"0.chunk.js","sourcesContent":["import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule }    from '@angular/forms';\n\nimport { IdeasComponent }    from './ideas.component';\nimport { IdeasCategoryComponent }  from '../ideas-category/ideas-category.component';\n\nimport { IdeasRouting } from './ideas-routing';\n// import { HeroService } from './hero.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IdeasRouting\n  ],\n  declarations: [\n    IdeasComponent,\n    IdeasCategoryComponent\n  ],\n  providers: [\n    // HeroService\n  ]\n})\nexport class IdeasModule {}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.module.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\n\n@Component({\n  selector: 'app-ideas-category',\n  templateUrl: './ideas-category.component.html',\n  styleUrls: ['./ideas-category.component.css']\n})\nexport class IdeasCategoryComponent implements OnInit {\n\n  constructor(\n      private route: ActivatedRoute,\n      private router: Router\n  ) {}\n\n  ngOnInit() {\n    let category = +this.route.snapshot.params['category'];\n\n    // this.service.getHero(id)\n    //     .then((hero: Hero) => this.hero = hero);\n  }\n\n  gotoIdeas() {\n    this.router.navigate(['/ideas']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ideas',\n  templateUrl: './ideas.component.html',\n  styleUrls: ['./ideas.component.css']\n})\nexport class IdeasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.ts","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { IdeasComponent }    from './ideas.component';\nimport { IdeasCategoryComponent }  from '../ideas-category/ideas-category.component';\n\nconst IdeasRoutes: Routes = [\n  { path: '',  component: IdeasComponent },\n  { path: 'ideas/:category', component: IdeasCategoryComponent }\n];\n\nexport const IdeasRouting: ModuleWithProviders = RouterModule.forChild(IdeasRoutes);\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/bucketlist/bucketlist/src/app/ideas/ideas-routing.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.css\n// module id = 762\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.css\n// module id = 763\n// module chunks = 0","module.exports = \"<p>\\n  ideas-category works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/src/app/ideas-category/ideas-category.component.html\n// module id = 773\n// module chunks = 0","module.exports = \"<p>\\n  ideas works!\\n</p>\\n<nav>\\n  <a routerLink=\\\"/ideas\\\" routerLinkActive=\\\"active\\\">notifications</a>\\n  <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">nearby</a>\\n</nav>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/src/app/ideas/ideas.component.html\n// module id = 774\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/~/rxjs/add/operator/switchMap.js\n// module id = 780\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/bucketlist/bucketlist/~/rxjs/operator/switchMap.js\n// module id = 781\n// module chunks = 0"],"sourceRoot":""}