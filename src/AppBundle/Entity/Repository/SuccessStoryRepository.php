<?php

namespace AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SuccessStoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SuccessStoryRepository extends EntityRepository
{
    /**
     * @param $ids
     * @return array|null
     */
    public function findByIdsWithRelations($ids)
    {
        if (!count($ids)){
            return null;
        }

        return $this->getEntityManager()
            ->createQuery("SELECT ss, goal, u
                           FROM AppBundle:SuccessStory ss
                           INDEX BY ss.id
                           JOIN ss.goal goal
                           JOIN ss.user u
                           WHERE ss.id IN (:ssIds)")
            ->setParameter('ssIds', $ids)
            ->getResult();
    }

    /**
     * @param $userId
     * @param $goalId
     * @return array
     */
    public function findUserGoalStory($userId, $goalId)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT ss, i
                           FROM AppBundle:SuccessStory ss
                           JOIN ss.goal g WITH g.id = :goalId
                           JOIN ss.user u WITH u.id = :userId
                           LEFT JOIN ss.files i")
            ->setParameter('userId', $userId)
            ->setParameter('goalId', $goalId)
            ->setFirstResult(0)
            ->getResult();
    }

    /**
     * @param $storyId
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findStoryWithVotes($storyId)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT ss, v, u
                           FROM AppBundle:SuccessStory ss
                           LEFT JOIN ss.voters v
                           LEFT JOIN ss.user u
                           WHERE ss.id = :storyId")
            ->setParameter('storyId', $storyId)
            ->getOneOrNullResult();
    }
}
